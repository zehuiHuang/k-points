package main

// 贪心歌手

/*
*
题目描述
一个歌手准备从A城去B城参加演出。

按照合同，他必须在 T 天内赶到
歌手途经 N 座城市
歌手不能往回走
每两座城市之间需要的天数都可以提前获知。
歌手在每座城市都可以在路边卖唱赚钱。

经过调研，歌手提前获知了每座城市卖唱的收入预期：
如果在一座城市第一天卖唱可以赚M，后续每天的收入会减少D（第二天赚的钱是 M - D，第三天是 M - 2D ...）。如果收入减少到 0 就不会再少了。
歌手到达后的第二天才能开始卖唱。如果今天卖过唱，第二天才能出发。
贪心的歌手最多可以赚多少钱？

输入描述
第一行两个数字 T 和 N，中间用空格隔开。

T 代表总天数，0 < T < 1000
N 代表路上经过 N 座城市，0 < N < 100
第二行 N+1 个数字，中间用空格隔开。代表每两座城市之间耗费的时间。

其总和 ≤ T。
接下来 N 行，每行两个数字 M 和 D，中间用空格隔开。代表每个城市的输入预期。

0 < M < 1000
0 < D < 100
输出描述
一个数字。代表歌手最多可以赚多少钱。以回车结束。
*/

/*
*
输入:
10 2
1 1 2
120 20
90 10
输出:
540
*/
func main43() {
	//思路：将每天能赚到的钱都放入优先级队列中(小根堆)
	//1、前期只要当前还能赚钱且没有用完卖唱的总时间，就要放入队列中
	//2、如果后续发现卖唱的总时间不够了，那么就需要比较当前当天卖唱的钱和队列中的top比较，如果发现没top多，那么当前城市的这边没必要待下去，
	// 如果发现当天的卖唱钱比top的多，那么堆里之前放入的那天就可以剔除掉，把当天卖唱的钱放入队列中
}

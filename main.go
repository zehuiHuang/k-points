package main

import (
	"bufio"
	"bytes"
	"encoding/hex"
	"encoding/json"
	"fmt"
	"sort"

	//_ "github.com/go-sql-driver/mysql"
	"io"
	"io/ioutil"
	"log"
	"math/rand"
	"net/http"
	"os"
	"regexp"
	"strings"
	"sync"
	"sync/atomic"
	"time"
)

func main1() {
	filePath := "D:\\data.txt"   // Replace with the actual path to your log file
	outputPath := "D:\\time.log" // Replace with the desired path for the output file
	searchString := "optime[1701251681]"

	// 打开输入文件
	file, err := os.Open(filePath)
	if err != nil {
		fmt.Println("无法打开输入文件:", err)
		return
	}
	defer file.Close()

	// 创建输出文件
	outputFile, err := os.Create(outputPath)
	if err != nil {
		fmt.Println("无法创建输出文件:", err)
		return
	}
	defer outputFile.Close()

	// 逐行读取输入文件并过滤出目标数据
	scanner := bufio.NewScanner(file)
	for scanner.Scan() {
		line := scanner.Text()
		if strings.Contains(line, searchString) {
			// 写入输出文件
			_, err := outputFile.WriteString(line + "\n")
			if err != nil {
				fmt.Println("无法写入输出文件:", err)
				return
			}
		}
	}

	if err := scanner.Err(); err != nil {
		fmt.Println("读取输入文件出错:", err)
		return
	}

	fmt.Println("过滤完成，结果已写入输出文件。")
}

type HandlerFunc func(string, string)

func main11() {
	http.HandleFunc("/ping", func(w http.ResponseWriter, r *http.Request) {
		w.Write([]byte("pong"))
	})
	http.HandleFunc("/ping22", func(w http.ResponseWriter, r *http.Request) {
		w.Write([]byte("pong22"))
	})
	http.ListenAndServe(":8091", nil)

	reqBody, _ := json.Marshal(map[string]string{"key1": "val1", "key2": "val2"})

	resp, _ := http.Post(":8091", "application/json", bytes.NewReader(reqBody))
	defer resp.Body.Close()

	respBody, _ := io.ReadAll(resp.Body)
	fmt.Printf("resp: %s", respBody)

	for i := 0; i < 10; i++ {
		fmt.Println(rand.Int() % 2)
	}
	//filePath := "D:\\time.log"     // Replace with the actual path to your log file
	//outputPath := "D:\\token2.log" // Replace with the desired path for the output file
	//
	//// Open the input file
	//file, err := os.Open(filePath)
	//if err != nil {
	//	log.Fatal(err)
	//}
	//defer file.Close()
	//
	//// Create the output file
	//outputFile, err := os.Create(outputPath)
	//if err != nil {
	//	log.Fatal(err)
	//}
	//defer outputFile.Close()
	//
	//// Create a regular expression pattern to match the "access_token" field
	//pattern := `access_token\[(.*?)\]`
	//
	//// Compile the regular expression pattern
	//regex, err := regexp.Compile(pattern)
	//if err != nil {
	//	log.Fatal(err)
	//}
	//
	//// Create a scanner to read the input file line by line
	//scanner := bufio.NewScanner(file)
	//
	//// Create a map to store the unique access tokens
	//accessTokens := make(map[string]bool)
	//
	//// Iterate over each line in the input file
	//for scanner.Scan() {
	//	line := scanner.Text()
	//
	//	// Find all matches of the pattern in the line
	//	matches := regex.FindAllStringSubmatch(line, -1)
	//
	//	// Extract the access token value from each match and add it to the map
	//	for _, match := range matches {
	//		if len(match) > 1 {
	//			accessToken := match[1]
	//			accessTokens[accessToken] = true
	//		}
	//	}
	//}
	//
	//// Check for any errors during scanning
	//if err := scanner.Err(); err != nil {
	//	log.Fatal(err)
	//}
	//
	//// Write the unique access tokens to the output file
	//for accessToken := range accessTokens {
	//	_, err := fmt.Fprintln(outputFile, accessToken)
	//	if err != nil {
	//		log.Fatal(err)
	//	}
	//}
	//
	//fmt.Println("Extraction complete. Unique access tokens have been written to", outputPath)
}
func main21() {
	filePath := "D:\\data.txt" // Replace with the actual path to your log file
	outputPath := "D:\\ip.log" // Replace with the desired path for the output file
	// Open the input file
	file, err := os.Open(filePath)
	if err != nil {
		log.Fatal(err)
	}
	defer file.Close()

	// Create the output file
	outputFile, err := os.Create(outputPath)
	if err != nil {
		log.Fatal(err)
	}
	defer outputFile.Close()

	// Create a regular expression pattern to match the "ip" field
	pattern := `ip\[(.*?)\]`

	// Compile the regular expression pattern
	regex, err := regexp.Compile(pattern)
	if err != nil {
		log.Fatal(err)
	}

	// Create a scanner to read the input file line by line
	scanner := bufio.NewScanner(file)

	// Iterate over each line in the input file
	for scanner.Scan() {
		line := scanner.Text()

		// Find all matches of the pattern in the line
		matches := regex.FindAllStringSubmatch(line, -1)

		// Extract the IP value from the first match
		if len(matches) > 0 && len(matches[0]) > 1 {
			ip := matches[0][1]

			// Write the IP value to the output file
			_, err := fmt.Fprintln(outputFile, ip)
			if err != nil {
				log.Fatal(err)
			}
		}
	}

	// Check for any errors during scanning
	if err := scanner.Err(); err != nil {
		log.Fatal(err)
	}
	fmt.Println("Extraction complete. IP values have been written to", outputPath)
}

//https://aws.amazon.com/cn/blogs/architecture/exponential-backoff-and-jitter/
//https://zhuanlan.zhihu.com/p/367858588
//幂等接口

func main3333() {
	// 假设这是你从某处获得的十六进制编码的音频数据字符串
	//hexString := "49443304000000000023545353450000000f0000034c61766635382e32392e3130300000000000000000000000fffb78c40003159620f82c24c54b0fc16045a7a471004fad1c81e90acad5ddc4201cd0070d85c56dcd746daef0a018000421f6f7da6d9f902106102040847bbbbbb3c990c68f110409934eef5c9a7111fc3db5b67fdeecc21110f76c9fffdf7b8cb640f4d882719e31eee220b4da49a7df6210b6c040010219bcf278c081081020410264c993dffd8204164c9efec4f73988788a88c7fff82111dcf4fb465b7d7bef764c9b2116c6104208678ed1fbddc39e0e169dec13269ec678cffb467ec9e801c06bd691ca3070d219182ac92be39918cadac4eb6f6b02c98732e6147325d2bab4e5256a24ced5b549f72fe99dc8630ac742e6cdc5a9a668a65222f6d458659ebc6921a62e7e69f6d254a9b32875d25ab6b29455a9ab04992544526d3d3591a8cf9c51c074e205430f2021449a2562d2a7046819324732541689a5d4b6db73a5093db9a88e01f6720d531b48bc911da9cdede5c37fb4a773622c14f29a7f63e6930aee3922275c4d51432d4732592bea3b5292183294a129490295572522e20b24686965345bcec12350dc4640c384574d8b3b147373741f9e3629e331c8bc02fd63477abafc2d384d0dc0d3d19cfffb78c41503d6e615040d1933cae9c3e081b325b976785666fa46229039bd59957570e8aef7c6f31f0e35bd6bd5dde804b3f3ecc7d7746069cc5811e715aad44ddae9d1c594785ac79f8c44cf32e7210cfe11ccdd6b334d1b119ea4d95ebb417e53afbb0429ea72ecf86adb26209675e5b0c3f172472e68932d8a238c5fb3a8c1551d5470fae3cb45a934cc976a594c6a9b5992eafb3926e7085ce1539258b669c683780d4014cf4f8c5030c680ddc78a293172f52d1cffca22431e1269c3328ff1e737adf13bdac889ceafbae5be73a1b665ae9a2d39cab63abb62972619b961c4c95a811a1af3b4ef36e6c52b78b3262deac24cd564fb14714a5d5933d514662b39a53c40405d88104d16cd32abcad48cf1c5cca8b86ddd7429d2f267673cb8e5ccfb6ab6a460bb50dd8a76bd36caeb418aa5ebb0a205c8a105ed130d143dc90fdb2951dd84e9692aba4dc2934ee39139087a82552bd966d77c30d534aca4db238304024495204022fe3f3d172cb6226de54f30f388649bb94da26e659e99e3c664d6e7d6ffdeca3d6feba651487c7a73daf730a67bb9979939e39d8b7432fa6f95af86df4d05963d23374916d288fffb78c42983d4ce21060e30c542dcc160c1b3263933514b69487a685b5109c31ca332a51abe7a7afaa039f291cf165aeb6337bcebddabbdcd9736d6a9adeced792f422946a12dd1560fc4b7a4fc41cbdbe3d533380773ac6fb83776924373d6b663f4bd3f66fe96e7441256d262e946003e59a86dbab9d2abd4ff25bf9c8f0a6ddc95caad2a5a9950890cfb5d578f3bfc665d3ee73f68c6dc4f9f4597d3b934bbdc48c089c30bb277cc5a0b9276931e4d829b10bd277b3167abd97c206c42e149955e8c1e689a29975a954a69bf194315d77c6dca3741e28a1930e7690c972301d7239b7df6524c6547c258ac8a209aaddd33eb14ba95c2f5855a9bea771e946d7468b216ab6d30c3a4a20824a5fa9bfdca7bfaede5ca793fd5c0e79bf867c5400fb03104e49124bfaf244ed51a4c4a450419b0ce9a471f086907e621149baf45247229636b9d83cae34c9ecc6eb4ae008827237a5c85e286f044a6250856f6fdcb802768d803dab9de77f161d75d33635d7043656449a88f08a8f2b9c84821045874398f040e6dac99ea82971900e0880c48b26d44c818a8287265a8672f7d0c35094bc5d1116dd7238ad7f59c421c" // 替换为你的十六进制编码字符串
	//hexString := "fffb78c448036735f7102c1b278b273aa78057a32848c5050316300272a7524027c20fc5d2fe1ea5a69c89dec31bf18b15ed558a75d071191aeb922db42bac908b089a85f752e300241c210cd812e000e1e14be6990bf4c764153834b06907020154c0210b300e0c00a0285370e612ac8af507c8023384212404dc750989f13ee040949637f873ec63dbd9d696636f562bdc9c945272576f585789d15c772cbff370fc724344edcba1c89dfc61bb7f4985795d1e17a20047b9078f2301dcd8bddfffc9ffff90e9280e2e8516122bcef8ab1c03a150af810e3ead6cc7bc76b6351b1ba4c170563258ed1331eb380ff55b79d6c2fa0af1a605f25e5ecec5d0f01c83a0ff1be774cbb511385c97348a16f1e1770d5a3e38f8000e07f25605f10b011d8a1ae8246d45dceb276c4a06f57b8291510158f29abeb2fd3ecfb8e7e2309c2b140f0d01f03f14abb682d8ac33d0e210ca3904603a13772581881a05b17058085d417ae2c802a0c8b900f94afa23df6956eff52e7c6e954eee453a8bd967f0450601f72c0fe5f2eabffffffffdef32dd5514eea8ca6387c452e6ace620d30f1a73a83983038fc3d716b53b23a486e1fffb78c413801b01e34e02e19cc32cc3ed7c913e6976640f3b48963386b2f3bb6d6d5b95c367883305346f20c86de985bb0a09246a1224888baa816c1ef70b95d9e3655625fae03b8ebac832013518c3d8fbe51d77e1b8d35c99b55218a6a4771d37ee87295c3ae9ca9ae363974455bdacac7c6210c26a33b52f9969ec80be6c41c1482745a22c482d33d4de4c5cb04e5b80d40992c0f92cd96afb535674d2f458e30bf262bda90beef95c773327c72e1d9fc113efc0b1c622ba43c6d78e1c087d61f07cbaafcdffebeaadad580087c25ae622b3b2d7d9c1547b1cbbbd58c6d3aa759fc9a7aeffbfffff4b55cf763a2b4aa554035a5a3c2dc367a5eddb21d1be7db5b9ae96e02e95ac0807ebef95c8c3d940ad8cac3713255996deae6fce3166a53cf33c7263b3c9678adee754399266b5d2a2232a8209b8885339cd556434fb245ecf591b5489c56ab132a67acee17a6aaff5ffcfcdaf23c870f73674d9160c989e0421603202a048d1ebb492e3048c9592f8a53275005b1fb3396b70185cbb043d41bbdb4b7cc69225dec6871a249e9dd578a99776767ad900005b7676a1e24307746b40d8a9929643dd70defa1a78fffb78c40f001981e76bec219513473bec3c87a7987e554d1a811a7d1dbab2296c0ef03a2e55f694d6c4671201d2687e26997a8d4f8dc7a2ccf5c9f3f7f5feeea6df2f4bb3c23a44ca6252dc2da239a2c52b1bd665da56042933b9e090b0c5008494bca59e0c0dc56163e607e1f00a3e191cba9d25be36d83a4717bc704a6caed34e1dac3b46f0ec39ac526aa8aa7cc8f7b55cd2eb3e4975971b69e7a8c4eccccf4e4ccccccecce6fece5f6f7ea4af73d0921fc0b97ecacada6d4668c231dd6836352bbddaf7968968d800000048230b83a208aa8a88239a273155d860cb3ae64d6be1bf98bbe7b8cfdee5e3a9cf9aabe3e621662298a1e24891590d5d964726942dfc178e724ef4ff90eb7662d1149e454cd31614054b3bd501ca4f62302b942a16b8cd88e55a1a9d603b5c1f38996585b8f31bc6f1ec898d0277c7f2b7ba687cf5ea7a021a6c1d6a03555cc6b04b52c424d179149a8e63996d0f14988a23953c46d3cc2ceb0816158101b26248915a2b8de4afd6dd4bd32e8b28504197c4ad3af279461ccaa81e47044eaa534897871e2e2d91ad963256677c888000000ac8970e81d944c2aaeec3afb76abb0bff53fffb78c40d801861cf59e63d3e0b28b9e979c7a1f890e0c62415d7ae40f2299dfe9fec9f82978291e7f6f5ad699ee9fd9db53e382ecd0b342da94662c47442288223aa664fbe531383a0f9b87d0f4992f50d7182c2f5858a3d58a31fa86aa6151f4314900242a0d1aa45a90246a82c4c64b024091a5b62864a92e26cfeb19388acb1336e01894e1a2114aa4b642992b52a2235744285c8b628402896b631ffffe3e35b5bfd4bdc6bdedc6a2e926ce2c2a69644d146dc37bf0a63a37fa15b69797666440006ad5cc44143308bc0b0736ea60c550931a140c125736c2c8cf0270282996804262307286d8778d70a820aa873717f33159fa8d59b6fdeb7663608accac208c2a376a1429923d30db1b3168df02ae6de5b0be1f2123027c18c52aad5f088708090b03387385419aad5d2bd14b9572a974daac74ffc192484e46966197eb34cc7142a2f3a65b6228f449764878a22606354dcd7f1fe95c58c596150d1c92860f541a79d5c362ca3c7a9271e6cd3717f5ff534b3c4d7efcc43f4daf78d4a24d47cb42a94aa55037a101230000390c79728a068c303287d1b81c02322d04e57170512cc2e2682c742aba659f369fffb78c4140098b9c347ce185e83272b6721ccb1f8d345864fe5aef328e4baddd89defdfc7e768a62c31676234ea29baf594d150cbb2cbb76557f2c9f7715fd8a43c2c09729ba85c062416304004bfaa952d0b62e2b216ba830b0ac45c18c396eaca5a6368e35dc257737dab6a968191093aaba48cec3bc961093a08a55d0bc28b7452d0e4a6a737f6ffefff7d4ee206b531c39e9cb45be8a4eabe9b333bd9d1db2f5ff4376bd4b4ba75b28632225ec677edad0000c0ca2b8b0002e1b36ac14c5e03301004aa0930827cd8a521a19c69c74850803bf31e465468a2a97161e5f853524ef2b672997e772f3acff43d1c32d4160a332e4ca4b08721e94ca28ece55e25ba5b10f40d04be09a46216d019b33932a92695a7390c09f9a07d9b8800d37117028d4341204be10d692a9b69576bcaa9ad67dc75f991d20a2eaddfe348d7954118d6695acdf4169e60c5cc381d5c7b9fdacd7629c99eb56ace6f566d69d9cbae555acaedabb0a9415240f3ceffb01ae544cf06dc384813055ded91a008000110c950048040420c00833724aa2a0320902f8e804181c84e871a7980b80f090093a2380749eea02a60600e086060135fffb78c419829a65af2acf6053cb04382549d796eb1e6f5f60c00c8c5ec20390daab92dc86ecd41100bf2a42291735be1b6f5f190935253157763363f2eeab6a559cb232e0db52e73988be0a1e641ab95857b61a95d8b728779fe7d8b4ceef5fe8b4ef696a5373ea65dffffcf728ad30d71bb5ca36e6f3cdcc35c492674dac052a7ee352692bff03b72a4706d4459cc56ff29a7b9facb55eaeb5bbdbddfbd4beaf594ad42b19ff97ffd3bbea54fd20a60a683cd385052c38280f0384e30f8183dffe733282730041430281d30886f36dc1a42f598b0a210c54b5a63ee000b4c8905554f92c2ff335e6e230ab1f34c099dcae3896c0000dc7711be6720b2268a63fc7a4662567ce75ac7cf7d8473ab41ad691b32394daaeb5fdb701e3d71bebfd637f3f3ffffb72ed76a4511230bc3145e853047c5a4ae1c83388682ec3854eaa4a9ba72aa09046435650d5156bbcffacdb16774f073fb5d93bfe8932172f5d6dfff46a173b396e6d74a310ac2c38e05a3253fbbb3b98d5000240c0053015004302101b30a700b351c2b131f902d0106018138089826061186c057080085780340246418c2001d1350cc2c01a61700531fffb78c41c8397f1df244f3c53c2c8b7e401ee34b81c5d34a81e016ad94e96670c1ed67c28a7988380c22e8ab17508530b2b59a2264f99a9b8bace737aeb2aa975341b78397f175f1bdff47b8a47f17de4aee1e2d8c67fdead31fe5dd64e93746f1f5190916801f4578cd0ac2e6d92c1b9d277156ab5221cf550ea2d2bfe7ebe5ec3bdef4d7ecf5ffb7ffdfffff9bffff82399182bbbd9f7b95c5e84c9301f033304d00330371a337eb65231010500405ccce41324d88e90830a8b4892662411988520101d0504cb3e08368b1093395bd4082a064469046eb5bb3852c5689e441ea36959904d4162a3e646466829df52664b31427cd5664eb4694f27ea4504d3291c3e796b48f32466796eeea751912cb4c7291077124683142e2742f00b21841ee2481217240bc24c4ba216d12c1c2463573556aaea4953ec93bfffffffffffff5fffffaeb38158d728587600420024c020100b1870388386832e1d73df30939d94931602330b80b306c5e240c8c3f050c0205cc2a0acc2604440011822032f70a0021221cc742da139419d699a993bde9324eb5265e744c94b4dba299aadd6b3d556cb3538abd24d4b42a5a57a9341fffb78c431001350fd1ed5d6800530c2e677359001d489d755a969d24967695d153ddd27644c50453353a1a02843d849f3928081489dd9c43430501037f83ed79b07c1f6f99b0801660eac83b9d406434190b8ee6e00820100000006843471d248c3ca55130f54d28c60c3cc421919a304420b20ae0c810040b2da0b0e2d225620809811184811aad72881228c82adecd9b1b43cddc872c31462c60045064c3f0dfb2ba8ca1b4548ce2286110152ce7c4c10d8f1901ba6ce10085f6434068b18967c398db9662d21f542c78d70cbe1293e68101d681bb60aafdfc4ea428b7394f6ec5da7bd1bb7225e734fe51bbb22715f562e9900408601122d6299a4a1d020b21010a2bc6edcbfbf9ffe18e744e2cd3a0afe5595acf3bb619632b2a840a11c94003f3033cf47372e6caed4310dc5dcb9fb12fef25fae5bc3f9bf5e8b481404c174d8a2f66203c1bc138f45d8dbf939d68d92925846b29692a4f762ad4dbb3c2fa4be310ec5bbffbffcf7dcf5ce7fffffffe74f7e9f2a97ee7cba3144eff776f98779f01c3f2e97c71b12c23fcc31a8b7ed2a312f8bc2aa787d48f5ab9b76400027f4d01928471512133a16691b570ffffb78c40b0016557f53bd978002bf2f2b3d948fc81bfb5699c4bff50f3a4f86e648d2c1792c976f8ef1f3a53b9bc5d44899bc381331a7cb7813e63a188b2104215a5bc8385f92a08c36974258739c64acb9aa90c789f76f28f1bdcf2d84ed68d0503243b5e467bbca529eff1fdf37fe6dff8ce71fd774c531ef7d63c7be3ef54d7871efbc52fe94f9bc079bff14f6fba57d35f19beb3fdef8cdfed82243dd55f1f53844fa572ec9afb149286c0d1606b12908313a33c35000041f665532b9c25fa8f136a84c9c7c99dbf6fcde7414d1b3ced88c49e5b52e59c35dcecfd8bd6b1d55adfcd7ffeb2c7952230f29db756d19bba2f1bacad03a1222112a3032ff4cc8430f90aa3dc1d3ab7a58dec0e9e10b6a4c313318fbfeea29dbb9312f82a51f6feeff37f9f9e42705d2bab8c2b25956d24ca48576502a4ed119c6094561e3cc943ad6175ce285c2053020647e5fb5bb49de75b91f90d8e90a380223fffd21a53d6a00069b7ea000000ffc9b2c32127588340a2842b22a93345f561ab7953cbbbd945dc70966b2fc33c77fcfeeb3c7fbce67ac29291c7705a1a11ae7843275462c20d3ea66650cade5db606828d9d2c5fffb78c4270095a56555aca47e428638ab358197cba0aeb61acb904ad2c280a4902445d85d65ba5d56808acfca42db673d6bd9ca7195772d7fcf9fdadad3d17d95c3cf2b755ec9296b3c4ab5ae9363051836703c6cc26999663629026020212198e73258c4a4af2bd25830640023c5a24ffff3b690054ebcc80adcbb1e326128aa590e80102d8dfdd73db8bb30eb756a39d6943d756035878a6a92dfe72bc31ce9657de53d3d3dfbb4962fd8987ae08856d962ea8313402835d29d2c31b3cae66089f95404fad143ad7d92cdc75e2826236e008169695f6a6a6a7b3bd6f1fffffbe43c0c0ee656919ce56b9931546aceb5944a9460d631a314cc9d3db5e6ace46891263ca3d8aa100e1587a0b2edffbea9edfa88e52d024004c460104071a405622fe9818799b0facc745349e7bd063adf8cd61f2ab56aad6ed6a6b5472db52477df87454065cc294ccbe3311669309b96a24adc5e285c790c81c2594bfcc4b2ee0718bca88ad29af589b7e60165b014595b5dc5cade4294c5225e07ed88ce479de95434ff3bd2eb597fe3fffffff3cd23871697aafde7392af4f8682832ce0adaaa7f472475738918023c88a1d33ffffffb78c44d0295f17540ade0cfca82afa51eb4b000dbbcb4ff33d92ee0a12c580425c8da3e519143317451001418160530657e1eda47fea1a9000e3e3534801a0b3ad0db8302d152d2f4be52261b924d7acbd693a91590804c03a14c7413c7d3c49425ad2a1fa186c6c4094981f1e89c3c969ae78d4e189a267170412047493543dc34f572d6d56de6f67eeee2af96ee8b8bafef87d4ecceb69a8d43e61f73af6d8aeaa2d688f9d8ced9dbbd90e6f0e963be5916d645247b0c2e081e18c39b36567d1381f140f9fa48fac9aa0030241c084342000000200000064052f2e60c38b88447829b2e0404012cc949366290e986019c21ae4017135ef4e6c7310381480d79e24ee2c3ccea534e8cd0883608c1cb8dd2e3e574f3ac121e828bb1d430c5a120210441454e981008fe20069168a6cbdc77dda7ae4a8a99aca65b23a62faa5e0801b6a0914c41c88a43f1bb6fe3f880362efebdd357d883fa9f2151080f48ab6940d34aa3e58ffd3f177aef75dae43938bcd310ba62418b4e9889780e28bd5c330400c1297202e60c520286664079820630653f9afbbf6e1f89c5d883388a4bf3ce31127f9c286e2af649e5f11a6afffb78c4720029961533b99d000c73c0edbf3590027c61c748b20cacb40c9a2a241100efb358988cb8349877ff3cf3a4c3fbbffd7cdc377e82e677b1c71defff7feb11dc7e1f270e4f624b315f53772593fd97ffeff9ffbfc35cef7ffffffffff77b1ab7ff99dbdf7bbffffffab3f5ac47e37189c81a5931479e13d8c3dccbab22abb3ba9999a491a48164d4b4607266ace81bcbae062726a45031d2c44522cce17135ab1010101374656ba8a829f81ac74022d23286576ca5aea20ba6c19f57ed8258ef20e82587bc4b04dc9ca71296471d7fe077c212f7be30a5c5237999fc4a0a6e118862cc1d4f1b8659e4962d5e2376113d1ec2532a9abd7eac3d147f1c87dd823cad3e1d6c0f2637662ad2505bc68755ac4ed8fdd4c353e9d6a0eee2803145078066b3ca31ced34c52f1fe8c4fd2e16f7fa9d8f4aabcb65bcbb6ee7f7d895143ad2e38e243f390e58b5adf7fbf2daf31c8dcedcdcb2f67cc39affb1775494f2ebb8dee56ed8ffaddaf85b96c3f7a4184e3ff6ede7539f9f3fbf4f2ca5a91f97c6e5f94350e5cb5ae63acf1d6f1d58ad76c55ab2dd814ae9ac10400002a0c76538aa85c6890590b0baec0e6f342fffb78c40a8096f1754f1c97800a8234a8e9860e7178e621e7e1cc6e218415125b4bcb834ed551731ecf9dc380a25d312d3b9a2353ef062ee0aa542a554c476e9f596a2b73e516aafe369cad4bd3577bd860eda17d427a10a214712d3d2da4a8ca67c16e3caadeb2c2e2fb11f0fab160cac2a161435b1f373a62666370669e1335a66e8fa84c4aedefb7336755cebe3fb6e466627b35bcd8be7e2b0acfa3e74f7db5685192030d19c68d74305fff84146ba6f37fde151710300000166e729db23c93f0fd27c41cf4f7587ea99aaa17dd4acb38970382620a631f76299aa08beb992ebe70dad2d2e5d765f31b9f5a5e5a72eecdbba1f80e3d7d5b2985c14363e93148b9458270f8c1459d5cbded62095e63b5f85e53565c3aa7fea9f3a58eecee3f5e9fa5a59d5460c42881d5124f499ffffffffff2fc9fe31d5d4b8f0d56c1c2d1046cd858cdc20a82a920eb41375ae384d6c730c760bffa863000000200025cfaaea4952e90a420c21bab5882d62408fc41edba46251208c2859422b0eaf14d8bea5d454f73b0989590a4646c9e34485bc6331b71716ae75affffeb5c42f12c610e37c6387f06a50485036c0fe015b3fffb78c42c00156dcf47acbc5382bbbaaa69a6ae9a9c8b0901e2b4975029d5ed9a7c8e6855272ac719e5b14bc28afdfc091ea3e90e456563494bfcce843ab8270a73caeeb37fffe65e47498ed53398ac8a5985250d2b7fffeaf2331e8446bbc8aa78804e384041b21a1200964009dae2bc6b942e948dfc3ded80210d0ccc3a9a312664cd99b3d963daf242b58410aaa304a495410de7ee365335365beb35951b29d7fffaa92d259f05342c0681f44086516938bc5c79d107932db71289a5f25268e4eb769235470bd04a2cd89ab28949a5c52002e3a0dcac4e1300004c351de3bcd20fb7fffffffffffdfef9ba838cf9f9fffffffffff7ff3fc2fdd313386e6e8aaf82e613d634612c9a5470b8b4d13261c4960ebfa7726a000800003cc002e966b4a40bc427f4bf0240044318064878341a9e8960d24643411369b66f38083cbaa5ee42e47ec6603c144ac6f313fac279b627b6850afadffffffe69f1fea0aed790f212a124c74d688d575dadf3e8ec6e49d71daa5f46bcd6c6f7acffbcd634b23e6765668eac703c189c22377482753c7f2ad4719c9536872c6cdbeffffffffff273a5895801c2000184410208c5fafffb78c44c001521c94dad3c53caa3b628e9b796797ffffeb9ac6130e2a3a06191945a0829fb0084003400021c66165832fc4ebdbca655e4c30ec418320c81d57692ae4eacbebdceccaad638c165acabc872bb7062dab0e684ec9834cf0cf49b3787bff7ac6335cfddf5854d116e276b1b2ee5d6f4c91b78250cebe9c2f367d49a9bce3ffffffe759ac59976c2b72ad2893a7ab03b3a93c3049529d1e4a0b9e98259b17cc9adffe9fffebce93ff9984c521f0e0a870262e26622b44dd246fff3bbb92b238ab1c60b8c443e080b117500005382165450000829a2ac9ccb89c36f98abf648420105507cd1e8bd8cfd4314164f45c7c32d8d12a9cf8ceaafb5fb9197283c76b7c07109c4f82e83e46ef5e3d32b7242a2fc2dc392b99948de8d7cd0535b6a7be7c1ce3ffffffffeddf5a22fb0cf0f122b9cf69d54ce962d1dc6f25a5ddb79dfd7f9fbdffacfc56573bc48f129581ac67189614352b5c95828ea48da7040ed44115acea334ed6cb3efe75febebd2fbceef5d5e07f7877c5ab6832c8a23e70000084dd8800000c34dc45414642871a7c24b0ab48c28126db729775ccaf695f7df82182dee55bf8f75677fbbbcfffb78c470801669c147ed99f10ac13968b5c60ab8bd666f9d4cb5e66df76e2a6c767e8db8f99bd11c1a3cbccc471d44927961e5fd1c9f8ee78d8d049480c908cd12e292dd474faceccdef33bb97cf7ec7acae72d55ca8b435ad648ca160665b86125aaca5be387fbb3bbefe9d143eeb684ee9eb9fcdb9b46af6d2ab119eb2b5d5c631c525738614686106fffff77ea8ebb19670a79e62b500005032188b000000ea44d04066f606440cd3de50e535d2f0374a7cacbef6a673b387f0375bc6afa6ef4c629eff59b7a523e32bb66d362526706b41cef099ad9bc9d014089915804e2a34618c0a694879bf603c1550d122372d54a57bbaae4c48b0d89c35e1fdd42d7bcec4159b27a0912f5977b292fae2703161e4448a2c81a96467549e7df1baf155f94b6b10baaf2cbbfb75b141987107a8cf35b93cab1a4ffd1637c58f3c2b3c540000c0c89a3b00000aa59532932f245a2d1bfe67858b0a7c587c8b0bafbd1fdc53c5cefea77f97f1e1b9e1bdce04dbd474e3d91589332cfc4005f9cc9f1dc2c03ae5e48da9db60b69e6e66188faa211f824ba7aa5161b301744142631f4e70d102d2fe52dedd2c25f657ed6abae2fffb78c48c0015397f49edbd2fc2b1b029fda7a1f893cd9b5259b064339616350387a4359acd5a813912488bc0af0ddffffd7ccab358eaf89ee7e34ba8b43509175bb090451389cf108412c61227fb59bb5a4b2a00020f3b60000009f48e1998ce1c2dd0251e73e22cd97334bf864b91883e3134ae35e76d6221139282e09a675792b25e15600ac98b31920159b547e9a5a845086efd9ec5c9450fcfe52dc7535ab07ca8a0ae215d48933262b54b136a334509d96c346a9f4d2dc8e90e5740647d023dad71532ad08ce848747094362a3aedae0b4479646e6df91ebdfffffc7d75155cce92f7e830520ab42871ca2a630d084682db1ea69255ffff95303888000008884001e69f1150018a9941846785080e705326eae88692be7ab239c03277a58abb0e025e2563592042c5ebec9eaf9503b4ce952100a26691271ac4568b622a8a4d6dadb29822c48b6f9c59a442abc51b2164119971280144a83a187c84d059c862e2cfdf1f971fd16f58d21c229a16485ab439beb7ea5e4d5215536eeb7effffffffea2cdd2de518c1f9a663a34f42cb4ca1e2a04854a54a3148d54926a75dfd1f8c7aaa000000035840004d2dcdfffb78c4ae0015557f4fad3d0fc29aafe8b1cc24f0350e5d0804e086617743ef41070b40260e0c3c5521858002d97b802a32c392ba4f70487d1024b12b20292b2ac084c8d4e55167ab97292f72af2af1e8b71235e2ae7b439e52f4444db42acd42cd6ab92a97f52b64ffa94a52b7d0cf47e67c318affffe9452a1a866a958ca5a1a88eac66a60428731c0ce22afc93bce88c9050f015356a008c00003c08044321f662d0ec2618e2060906a301f04e312b54631100090b029187600298348272b2940329804940183c029090208880acc0ec0906405140c6802536dbe8bab6b908446887b716cba7e4a41b5da5ddcded1216bd6a2856b2a7f99404ab4b4bd026a847e54c82a74686d52da71405a389e1f6d1fb3ab68bab2fd521ecacc71d0b1ebb59336cd669c3870b8721e1e27309231b5a29b655f1edb5cc7150f76a2d762463c70e06c2e38bc7c888271283415386538e3e8b0846324d4d45d4af1dcfff3c75a7dcfe9fd0e1a592df9a409a3343302101d3106141332106920010303e0c3329b65d315b0c5301001931b823544d2823760c780cf071ca014582d981970101011938eb0ba216a69295d3cf1ad9def5"
	hexString := ""
	// 解码十六进制字符串为字节切片
	decodedBytes, err := hex.DecodeString(hexString)
	if err != nil {
		log.Fatal(err)
	}

	// 指定输出音频文件的路径
	outputPath := "D:\\file2.mp3" // 替换为你想要保存的文件路径

	// 将解码后的字节写入到音频文件中
	err = ioutil.WriteFile(outputPath, decodedBytes, 0644)
	if err != nil {
		log.Fatal(err)
	}

	fmt.Println("Audio file has been successfully restored.")
}

func accessMap(m map[int]int, n int, wg *sync.WaitGroup) {
	defer wg.Done()
	for i := 0; i < n; i++ {
		m[i] = i
	}
}

func accessSyncMap(m *sync.Map, n int, wg *sync.WaitGroup) {
	defer wg.Done()
	for i := 0; i < n; i++ {
		m.Store(i, i)
	}
}

func benchmarkMap() {
	numThreads := 100
	numOps := 1000000

	m := make(map[int]int)
	var wg sync.WaitGroup
	wg.Add(numThreads)

	startTime := time.Now()

	for i := 0; i < numThreads; i++ {
		go accessMap(m, numOps, &wg)
	}

	wg.Wait()

	elapsed := time.Since(startTime)

	fmt.Printf("Map: %d ops in %s\n", numThreads*numOps, elapsed)
}

func benchmarkSyncMap() {
	numThreads := 100
	numOps := 1000000

	var m sync.Map
	var opsCount uint64
	var wg sync.WaitGroup
	wg.Add(numThreads)

	startTime := time.Now()

	for i := 0; i < numThreads; i++ {
		go func() {
			defer wg.Done()
			for j := 0; j < numOps; j++ {
				m.Store(j, j)
				atomic.AddUint64(&opsCount, 1)
			}
		}()
	}

	wg.Wait()

	elapsed := time.Since(startTime)

	fmt.Printf("SyncMap: %d ops in %s\n", atomic.LoadUint64(&opsCount), elapsed)
}

func main2() {
	//deadlineCtx, cancel := context.WithDeadline(context.TODO(), time.Now().Add(time.Second*3))
	//deadlineCtx, cancel := context.WithTimeout(context.TODO(), time.Second*3)
	//defer cancel()
	//select {
	//case <-deadlineCtx.Done():
	//	fmt.Println("abc------------", deadlineCtx.Err())
	//	return
	//}
	//time.Sleep(time.Second * 5)
	//fmt.Println("bbbbbb--------")
	//信号垃圾
	defer fmt.Println("1111111")
	defer fmt.Println("2222222")

	var wg sync.WaitGroup
	ch1 := make(chan struct{}) // 控制 dog1 的打印
	ch2 := make(chan struct{}) // 控制 dog2 的打印
	ch3 := make(chan struct{}) // 控制 dog3 的打印
	wg.Add(3)

	// dog1 打印协程
	go func() {
		defer wg.Done()
		for i := 0; i < 100; i++ {
			<-ch1 // 等待触发信号
			println("dog1")
			ch2 <- struct{}{} // 触发 dog2
		}
	}()
	// dog2 打印协程
	go func() {
		defer wg.Done()
		for i := 0; i < 100; i++ {
			<-ch2 // 等待触发信号
			println("dog2")
			ch3 <- struct{}{} // 触发 dog3
		}
	}()

	// dog3 打印协程
	go func() {
		defer wg.Done()
		for i := 0; i < 100; i++ {
			<-ch3 // 等待触发信号
			println("dog3")
			if i < 99 { // 最后一轮不发送
				ch1 <- struct{}{} // 触发下一轮 dog1
			}
		}
	}()

	// 启动第一轮打印
	ch1 <- struct{}{}

	// 等待所有协程完成
	wg.Wait()
}

func main() {
	//main	a := 0
	//	b := 0
	//	for {
	//		n, _ := fmt.Scan(&a, &b)
	//		if n == 0 {
	//			break
	//		} else {
	//			fmt.Printf("%d\n", a+b)
	//		}
	//	}

	scanner := bufio.NewScanner(os.Stdin)

	// 读取输入句子
	scanner.Scan()
	sentence := scanner.Text()

	// 读取前缀
	scanner.Scan()
	prefix := scanner.Text()

	// 替换所有非字母字符为空格
	reg := regexp.MustCompile(`[^a-zA-Z]`)
	sentence = reg.ReplaceAllString(sentence, " ")

	// 分割单词并去重
	wordSet := make(map[string]bool)
	words := strings.Fields(sentence)
	for _, word := range words {
		wordSet[word] = true
	}

	// 获取去重后的单词并排序
	uniqueWords := make([]string, 0, len(wordSet))
	for word := range wordSet {
		uniqueWords = append(uniqueWords, word)
	}
	sort.Strings(uniqueWords)

	// 收集匹配前缀的单词
	var result []string
	for _, word := range uniqueWords {
		if strings.HasPrefix(word, prefix) {
			result = append(result, word)
		}
	}

	// 输出结果
	if len(result) > 0 {
		fmt.Println(strings.Join(result, " "))
	} else {
		fmt.Println(prefix)
	}
}

func dog(wg *sync.WaitGroup, ch chan struct{}, count int) {
	for i := 0; i < count; i++ {
		ch <- struct{}{}
		wg.Done()
	}
}

func dog2(wg *sync.WaitGroup, ch chan struct{}, count int) {
	for i := 0; i < count; i++ {
		ch <- struct{}{}
		wg.Done()
	}
}

func dog3(wg *sync.WaitGroup, ch chan struct{}, count int) {
	for i := 0; i < count; i++ {
		ch <- struct{}{}
		wg.Done()
	}
}

type Pet interface {
	Play()
}

type Dog struct {
	Name string
}

func (d *Dog) setName(name string) {
	d.Name = name

}

func (d Dog) Play() {
	fmt.Printf("%s is playing fetch!\n", d.Name)
}

type HandlerFunc2 func(string)

func HandleFunc2(pattern string, handler func(string)) {
	DefaultServeMux2.register(pattern, HandlerFunc2(handler))
}

type ServeMux2 struct {
}

var DefaultServeMux2 = &defaultServeMux

var defaultServeMux ServeMux2

func (mux *ServeMux2) register(pattern string, handler Handler2) {
	fmt.Println("1111111")
}

type Handler2 interface {
	ServeHTTP(string)
}

func (f HandlerFunc2) ServeHTTP(string) {
	fmt.Println("11111")
}
